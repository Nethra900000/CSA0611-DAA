import itertools
import math

def calculate_distance(point1, point2):
    return math.sqrt((point1[0] - point2[0]) ** 2 + (point1[1] - point2[1]) ** 2)

def total_distance(path):
    return sum(calculate_distance(path[i], path[i + 1]) for i in range(len(path) - 1))

def find_shortest_path(cities):
    shortest_distance = float('inf')
    shortest_path = []
    
    for perm in itertools.permutations(cities):
        current_path = list(perm) + [perm[0]]
        current_distance = total_distance(current_path)
        
        if current_distance < shortest_distance:
            shortest_distance = current_distance
            shortest_path = current_path
            
    return shortest_distance, shortest_path

# Test Cases
test_case_1 = [(1, 2), (4, 5), (7, 1), (3, 6)]
shortest_distance_1, shortest_path_1 = find_shortest_path(test_case_1)
print("Test Case 1:")
print("Shortest Distance:", shortest_distance_1)
print("Shortest Path:", shortest_path_1)

test_case_2 = [(2, 4), (8, 1), (1, 7), (6, 3), (5, 9)]
shortest_distance_2, shortest_path_2 = find_shortest_path(test_case_2)
print("Test Case 2:")
print("Shortest Distance:", shortest_distance_2)
print("Shortest Path:", shortest_path_2)
